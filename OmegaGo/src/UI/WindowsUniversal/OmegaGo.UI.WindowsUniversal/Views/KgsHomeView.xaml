<views:MultiplayerLobbyViewBase
    x:Class="OmegaGo.UI.WindowsUniversal.Views.KgsHomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:OmegaGo.UI.WindowsUniversal.Views"
    xmlns:userControls="using:OmegaGo.UI.WindowsUniversal.UserControls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    Unloaded="TransparencyViewBase_Unloaded"
    mc:Ignorable="d" 
    x:Name="ParentView">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <ContinuumNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Grid>
        <Grid IsHitTestVisible="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <interactivity:Interaction.Behaviors>
                <behaviors:Blur x:Name="BlurBehavior"
                            Value="3"
                            Duration="500"
                            Delay="0"
                            AutomaticallyStart="True"/>
                <core:DataTriggerBehavior Binding="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                    <core:CallMethodAction MethodName="Blur" TargetObject="{Binding ElementName=ParentView}" />
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                    <core:CallMethodAction MethodName="Unblur" TargetObject="{Binding ElementName=ParentView}" />
                </core:DataTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Pivot Grid.Row="0">
                <PivotItem Header="Games">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,10,0">Show:</TextBlock>
                            <ComboBox ItemsSource="{x:Bind VM.GameContainers, Mode=OneWay}"
                                  SelectedItem="{x:Bind VM.SelectedGameContainer, Mode=TwoWay}">
                                <ComboBoxItem>All games in progress</ComboBoxItem>
                                <ComboBoxItem>All challenges</ComboBoxItem>
                                <ComboBoxItem>Joined Room 1</ComboBoxItem>
                                <ComboBoxItem>Joined Room 2</ComboBoxItem>
                                <ComboBoxItem>Joined Room 3</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>
                        <ListBox Grid.Row="1" ItemsSource="{x:Bind VM.SelectedGameContainerChannels, Mode=OneWay}"
                             SelectedItem="{x:Bind VM.SelectedGameChannel, Mode=TwoWay}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="10, 1, 0, 1"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <StackPanel Grid.Row="2">
                            <Button Command="{x:Bind VM.JoinSelectedGameChannelCommand}">Join (observe/prepare to accept)</Button>
                        </StackPanel>
                    </Grid>
                </PivotItem>
                <PivotItem Header="Rooms">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock>All rooms:</TextBlock>
                            <ListBox Grid.Row="1" Width="400" ItemsSource="{x:Bind VM.AllRooms, Mode=OneWay}"
                                 SelectedItem="{x:Bind VM.SelectedRoom, Mode=TwoWay}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Padding" Value="10, 1, 0, 1"/>
                                        <Setter Property="Margin" Value="0"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0">
                                <Button Command="{x:Bind VM.JoinRoomCommand}">Join</Button>
                                <Button Command="{x:Bind VM.UnjoinRoomCommand}">Unjoin</Button>
                                <Button Command="{x:Bind VM.CreateChallengeCommand}">Create challenge...</Button>
                            </StackPanel>
                            <TextBlock Grid.Row="1" MaxHeight="300" TextWrapping="Wrap" IsTextSelectionEnabled="True"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 Text="{x:Bind VM.SelectedRoom.Description, Mode=OneWay}">
                            </TextBlock>
                        </Grid>
                    </Grid>
                </PivotItem>
            </Pivot>
            <CommandBar HorizontalContentAlignment="Stretch" IsDynamicOverflowEnabled="False" OverflowButtonVisibility="Visible" Grid.Row="1" VerticalContentAlignment="Top">
                <CommandBar.Content>
                    <Grid HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" Margin="12,0,0,0" VerticalAlignment="Top" Height="48">
                            <FontIcon VerticalAlignment="Center" Glyph="&#xE2AF;" FontFamily="Segoe MDL2 Assets" />
                            <TextBlock VerticalAlignment="Center" Margin="8,0,0,0" Text="{x:Bind VM.LoggedInUser, Mode=OneWay}"/>
                        </StackPanel>
                    </Grid>
                </CommandBar.Content>
                <CommandBar.PrimaryCommands>
                    <AppBarButton Icon="Refresh" Label="{x:Bind Localizer.Refresh}" Command="{x:Bind VM.RefreshControlsCommand}" />
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                    <AppBarButton Command="{x:Bind VM.LogoutCommand}" Label="{x:Bind Localizer.Logout}">
                        <AppBarButton.Icon>
                            <PathIcon Style="{StaticResource LogoutIcon}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>
        <userControls:LoginFormControl ViewModel="{x:Bind VM.LoginForm}" Visibility="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
    </Grid>
</views:MultiplayerLobbyViewBase>

