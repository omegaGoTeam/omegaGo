<views:TransparencyViewBase
    x:Class="OmegaGo.UI.WindowsUniversal.Views.LocalGameView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OmegaGo.UI.WindowsUniversal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:OmegaGo.UI.WindowsUniversal.UserControls"
    xmlns:converters="using:OmegaGo.UI.WindowsUniversal.Converters"
    xmlns:views="using:OmegaGo.UI.WindowsUniversal.Views"
    mc:Ignorable="d">
    
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <ContinuumNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <converters:NativeInvertedVisibilityConverter x:Key="boolVisibilityInvertedConverter" />
        <converters:NativeVisibilityConverter x:Key="boolVisibilityConverter" />
        <converters:NativeBoolDoubleConverter x:Key="boolDoubleConverter" />
        <converters:GamePhaseVisibilityConverter x:Key="handicapPhaseVisibilityConverter" RequiredGamePhase="HandicapPlacement" />
        <converters:GamePhaseVisibilityConverter x:Key="mainPhaseVisibilityConverter" RequiredGamePhase="Main" />
        <converters:GamePhaseVisibilityConverter x:Key="lifeAndDeathPhaseVisibilityConverter" RequiredGamePhase="LifeDeathDetermination" />
        <converters:GamePhaseVisibilityConverter x:Key="finishedVisibilityConverter" RequiredGamePhase="Finished" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    
                    <VisualState.Setters>
                        <Setter Target="layoutScroller.VerticalScrollBarVisibility" Value="Disabled" />
                        <Setter Target="layoutScroller.VerticalScrollMode" Value="Disabled" />

                        <Setter Target="layoutGrid.RowDefinitions[0].Height" Value="*" />
                        <Setter Target="layoutGrid.RowDefinitions[1].Height" Value="Auto" />

                        <Setter Target="gameInfoControl.Width" Value="400" />

                        <Setter Target="whitePortrait.(Grid.Column)" Value="0" />
                        <Setter Target="blackPortrait.(Grid.Column)" Value="1" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="650" />
                    </VisualState.StateTriggers>
                    
                    <VisualState.Setters>
                        <Setter Target="layoutScroller.VerticalScrollBarVisibility" Value="Disabled" />
                        <Setter Target="layoutScroller.VerticalScrollMode" Value="Disabled" />

                        <Setter Target="layoutGrid.RowDefinitions[0].Height" Value="*" />
                        <Setter Target="layoutGrid.RowDefinitions[1].Height" Value="Auto" />

                        <Setter Target="gameInfoControl.Width" Value="250" />

                        <Setter Target="whitePortrait.(Grid.Row)" Value="0" />
                        <Setter Target="blackPortrait.(Grid.Row)" Value="1" />

                        <Setter Target="whitePortrait.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="blackPortrait.(Grid.ColumnSpan)" Value="2" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Compact">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="gameInfoControl.(Grid.Row)" Value="1" />
                        <Setter Target="gameInfoControl.(Grid.Column)" Value="0" />

                        <Setter Target="whitePortrait.(Grid.Column)" Value="0" />
                        <Setter Target="blackPortrait.(Grid.Column)" Value="1" />

                        <Setter Target="systemLog.MaxHeight" Value="600" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="CompactMini">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="gameInfoControl.(Grid.Row)" Value="1" />
                        <Setter Target="gameInfoControl.(Grid.Column)" Value="0" />

                        <Setter Target="whitePortrait.(Grid.Row)" Value="0" />
                        <Setter Target="blackPortrait.(Grid.Row)" Value="1" />

                        <Setter Target="whitePortrait.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="blackPortrait.(Grid.ColumnSpan)" Value="2" />

                        <Setter Target="systemLog.MaxHeight" Value="600" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!--<CommandBar Grid.Column="0" Grid.Row="0"
                    Grid.ColumnSpan="3" 
                    Style="{StaticResource OpenDownCommandBar}" VerticalAlignment="Top">
            <AppBar.Background>
                <SolidColorBrush Color="{ThemeResource GameColor}" Opacity="0.3" />
            </AppBar.Background>

            <AppBarButton Content="" />
        </CommandBar>-->

        <ScrollViewer x:Name="layoutScroller" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid   x:Name="layoutGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid x:Name="boardControl" 
                      Grid.Row="0"
                      Grid.Column="0">
                    <controls:BoardControl 
                                   ViewModel="{x:Bind Path=VM.BoardViewModel, Mode=OneWay}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch" />

                    <Button x:Name="controlMenuButton"
                            Grid.Column="0" Grid.Row="0"
                            Grid.ColumnSpan="3"
                            HorizontalAlignment="Right" VerticalAlignment="Top"
                            Margin="5">
                        <FontIcon Glyph="&#xE700;"
                                  Margin="2"/>
                        
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="{x:Bind Localizer.Resign}" Command="{x:Bind VM.ResignCommand}" />
                                <MenuFlyoutItem Text="{x:Bind Localizer.Hint}" Command="{x:Bind VM.GetHintCommand}" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem Text="{x:Bind Localizer.AnalyzeMode}" Command="{x:Bind VM.EnableAnalyzeModeCommand}" />
                                <ToggleMenuFlyoutItem x:Name="focusButton" Text="{x:Bind Localizer.HideTabs}" Click="focusButton_Click" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem Text="{x:Bind Localizer.ExportSGF}" />
                                <MenuFlyoutSeparator />
                                <ToggleMenuFlyoutItem Text="{x:Bind Localizer.SystemLog}" IsChecked="{x:Bind VM.IsSystemLogEnabled, Mode=TwoWay}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </Grid>

                <ScrollViewer x:Name="gameInfoControl"
                              Grid.Row="0" Grid.Column="1"
                              VerticalScrollBarVisibility="Auto">
                    <Grid BorderBrush="Black" BorderThickness="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <controls:PlayerPortraitControl x:Name="whitePortrait" ViewModel="{x:Bind Path=VM.WhitePortrait, Mode=OneWay}" Margin="10" />
                        <controls:PlayerPortraitControl x:Name="blackPortrait" ViewModel="{x:Bind Path=VM.BlackPortrait, Mode=OneWay}" Margin="10" />

                        
                        <StackPanel x:Name="handicapCommands" Orientation="Vertical" 
                                Grid.Row="2" Grid.ColumnSpan="2" Margin="10"
                                Visibility="{x:Bind VM.GamePhase, Converter={StaticResource handicapPhaseVisibilityConverter}, Mode=OneWay}">
                            <TextBlock Text="{x:Bind VM.InstructionCaption, Mode=OneWay}" FontSize="24" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,5,0,5"></TextBlock>
                            <Grid HorizontalAlignment="Stretch" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Margin="5"
                                    Content="{x:Bind Localizer.Pass}" Command="{x:Bind VM.PassCommand}" 
                                    HorizontalAlignment="Stretch"
                                    Opacity="{x:Bind VM.CanPass, Mode=OneWay, Converter={StaticResource boolDoubleConverter}}"/>
                                <Button Grid.Column="1" Margin="5"
                                    Content="{x:Bind Localizer.Undo}" Command="{x:Bind VM.UndoCommand}" 
                                    HorizontalAlignment="Stretch"
                                    Opacity="{x:Bind VM.CanUndo, Mode=OneWay, Converter={StaticResource boolDoubleConverter}}"/>
                            </Grid>

                            <!-- TODO Petr Move Resign to control menu when available -->
                        </StackPanel>

                        
                        <StackPanel x:Name="mainCommands" Orientation="Vertical" 
                                Grid.Row="2" Grid.ColumnSpan="2" Margin="10"
                                Visibility="{x:Bind VM.GamePhase, Converter={StaticResource mainPhaseVisibilityConverter}, Mode=OneWay}">
                            <TextBlock Text="{x:Bind VM.InstructionCaption, Mode=OneWay}" TextWrapping="Wrap" FontSize="24" HorizontalAlignment="Center" Margin="0,5,0,5"></TextBlock>
                            <Grid HorizontalAlignment="Stretch" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Margin="5"
                                    Content="{x:Bind Localizer.Pass}" Command="{x:Bind VM.PassCommand}" 
                                    HorizontalAlignment="Stretch"
                                    Opacity="{x:Bind VM.CanPass, Mode=OneWay, Converter={StaticResource boolDoubleConverter}}"/>
                                <Button Grid.Column="1" Margin="5"
                                    Content="{x:Bind Localizer.Undo}" Command="{x:Bind VM.UndoCommand}" 
                                    HorizontalAlignment="Stretch"
                                    Opacity="{x:Bind VM.CanUndo, Mode=OneWay, Converter={StaticResource boolDoubleConverter}}"/>
                            </Grid>
                        </StackPanel>

                        
                        <StackPanel x:Name="lifeAndDeathCommands"
                                Grid.Row="3" Grid.ColumnSpan="2" Margin="10"
                                Visibility="{x:Bind VM.GamePhase, Converter={StaticResource lifeAndDeathPhaseVisibilityConverter}, Mode=OneWay}">
                            <TextBlock Text="{x:Bind VM.InstructionCaption, Mode=OneWay}" TextWrapping="Wrap" FontSize="24" HorizontalAlignment="Center" Margin="0,5,0,5"></TextBlock>
                            <TextBlock Text="{x:Bind Localizer.StoneRemovalText, Mode=OneWay}" Padding="3" HorizontalAlignment="Center" TextWrapping="Wrap" Margin="0,5,0,5"></TextBlock>
                            <Button Margin="5" 
                                Content="{x:Bind Localizer.LifeDeathDone}" Command="{x:Bind VM.LifeAndDeathDoneCommand}" HorizontalAlignment="Stretch" />
                            <Button Margin="5" 
                                Content="{x:Bind Localizer.LifeDeathResume}" Command="{x:Bind VM.ResumeGameCommand}" HorizontalAlignment="Stretch" />
                            <Button Margin="5" 
                                Content="{x:Bind Localizer.LifeDeathUndo}" Command="{x:Bind VM.RequestUndoDeathMarksCommand}" HorizontalAlignment="Stretch" />
                        </StackPanel>

                        
                        <StackPanel x:Name="finishedCommands"
                                Grid.Row="3" Grid.ColumnSpan="2" Margin="10"
                                Visibility="{x:Bind VM.GamePhase, Converter={StaticResource finishedVisibilityConverter}, Mode=OneWay}">
                            <TextBlock Text="{x:Bind VM.InstructionCaption, Mode=OneWay}" TextWrapping="Wrap" FontSize="24" HorizontalAlignment="Center" Margin="0,5,0,5"></TextBlock>
                        </StackPanel>

                        
                        <StackPanel x:Name="analyzeModeCommand"
                                    Grid.Row="4" Grid.ColumnSpan="2"
                                    Margin="10">
                            <controls:AnalyzeControl  x:Name="analyzeControl"
                                                      ViewModel="{x:Bind VM.AnalyzeViewModel}"
                                                      Visibility="{x:Bind VM.IsAnalyzeModeEnabled, Converter={StaticResource boolVisibilityConverter}, Mode=OneWay}"/>
                            <controls:TimelineControl x:Name="timelineControl"
                                                      HorizontalAlignment="Stretch"
                                                      Height="200"
                                                      ViewModel="{x:Bind VM.TimelineViewModel}"
                                                      Visibility="{x:Bind VM.IsAnalyzeModeEnabled, Converter={StaticResource boolVisibilityConverter}, Mode=OneWay}"/>
                        </StackPanel>

                        
                        <ListView x:Name="systemLog" Grid.Row="5"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Margin="10" Height="400"
                                  Visibility="{x:Bind VM.IsSystemLogEnabled, Mode=OneWay, Converter={StaticResource boolVisibilityConverter}}"
                                  Background="White" Foreground="Black"
                                  ItemsSource="{x:Bind VM.Log}">
                            <ListView.Resources>
                                <Style TargetType="ListViewItem">
                                    <!--<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>-->
                                    <Setter Property="MinHeight" Value="10"/>
                                </Style>
                            </ListView.Resources>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" TextWrapping="WrapWholeWords" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </ScrollViewer>
                
            </Grid>
        </ScrollViewer>

        <Border BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="1" Grid.Row="2" Grid.Column="0">
            <Slider Value="{x:Bind VM.SelectedMoveIndex, Mode=TwoWay}" 
                    Minimum="0" Maximum="{x:Bind VM.MaximumMoveIndex, Mode=TwoWay}"/>
        </Border>
    </Grid>
</views:TransparencyViewBase>
