<views:TransparencyViewBase
    x:Class="OmegaGo.UI.WindowsUniversal.Views.IgsHomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:OmegaGo.UI.WindowsUniversal.Views"
    xmlns:userControls="using:OmegaGo.UI.WindowsUniversal.UserControls"
    xmlns:navigation="using:OmegaGo.UI.WindowsUniversal.UserControls.Navigation"
    xmlns:igs="using:OmegaGo.Core.Online.Igs"
    xmlns:developerTools="using:Microsoft.Toolkit.Uwp.DeveloperTools"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:igs1="using:OmegaGo.UI.WindowsUniversal.UserControls.Multiplayer.Igs"
    Loaded="IgsHomeLoaded"
    Unloaded="IgsHomeUnloaded"
    mc:Ignorable="d"
    x:Name="ParentView">
    <views:TransparencyViewBase.Resources>
        <Style x:Key="ToggleMenuItemStyle" TargetType="ToggleMenuFlyoutItem">
            <Setter Property="Background" Value="{ThemeResource ToggleMenuFlyoutItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleMenuFlyoutItemForeground}"/>
            <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleMenuFlyoutItem">
                        <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="AnimationRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaddingSizeStates">
                                    <VisualState x:Name="DefaultPadding"/>
                                    <VisualState x:Name="NarrowPadding">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="AnimationRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="1" BorderBrush="{TemplateBinding Foreground}" Height="18" Width="18"  Margin="0,0,12,0">
                                    <FontIcon x:Name="CheckGlyph" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource ToggleMenuFlyoutItemCheckGlyphForeground}" FontSize="16" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE001;" Opacity="0" Width="16"/>
                                </Border>
                                <TextBlock x:Name="TextBlock" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" TextTrimming="Clip" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </views:TransparencyViewBase.Resources>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <ContinuumNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid>


        <Grid IsHitTestVisible="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <interactivity:Interaction.Behaviors>
                <behaviors:Blur x:Name="BlurBehavior"
                                Value="3"
                                Duration="500"
                                Delay="0"
                                AutomaticallyStart="True"/>
                <core:DataTriggerBehavior Binding="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                    <core:CallMethodAction MethodName="Blur" TargetObject="{Binding ElementName=ParentView}" />
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                    <core:CallMethodAction MethodName="Unblur" TargetObject="{Binding ElementName=ParentView}" />
                </core:DataTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <navigation:TitleControl Grid.Row="0" Text="{x:Bind Localizer.IgsServerCaption}" />
            <Pivot Grid.Row="1" SelectedIndex="{x:Bind VM.SelectedViewIndex, Mode=TwoWay}">
                <PivotItem Header="{x:Bind Localizer.Igs_SpectateAGame}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <AppBarButton Icon="Sort" Height="48" IsCompact="True" Label="{x:Bind Localizer.SortBy}">
                                <AppBarButton.Flyout>
                                    <Flyout>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{x:Bind Localizer.SortBy}" FontWeight="SemiBold" Margin="0,0,0,4" VerticalAlignment="Center" />
                                            <RadioButton Click="SortByObservers_Click" Content="{x:Bind Localizer.SortBy_NumberOfObservers}"/>
                                            <RadioButton Click="SortByHighestRank_Click" Content="{x:Bind Localizer.SortBy_RankDescending}"/>
                                            <RadioButton Click="SortByBlackName_Click" Content="{x:Bind Localizer.SortBy_Black}"/>
                                            <RadioButton Click="SortByWhiteName_Click" Content="{x:Bind Localizer.SortBy_White}"/>
                                        </StackPanel>
                                    </Flyout>
                                </AppBarButton.Flyout>
                            </AppBarButton>
                            <AppBarButton Icon="Refresh" IsCompact="True" Height="48" Label="{x:Bind Localizer.Refresh}" Command="{x:Bind VM.RefreshCommand}" />
                        </StackPanel>

                        <GridView HorizontalAlignment="Center" Grid.Row="1" SelectionMode="None" IsItemClickEnabled="True" ItemsSource="{Binding ObservableGames, Mode=OneWay}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="ItemClick">
                                    <core:InvokeCommandAction Command="{x:Bind VM.ObserveCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <GridView.ItemContainerTransitions>
                                <TransitionCollection>
                                    <RepositionThemeTransition />
                                </TransitionCollection>
                            </GridView.ItemContainerTransitions>
                            <GridView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsWrapGrid HorizontalAlignment="Stretch" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </GridView.ItemsPanel>
                            <GridView.ItemTemplate>
                                <DataTemplate x:DataType="igs:IgsGameInfo">
                                    <igs1:IgsObservedGameControl />
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </Grid>
                </PivotItem>
                <PivotItem Header="{x:Bind Localizer.Igs_IssueAChallenge}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical" Grid.Row="0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{x:Bind Localizer.SortBy}" VerticalAlignment="Center"></TextBlock>
                                <RadioButton Click="SortUsersByName" Content="{x:Bind Localizer.SortBy_Name}"/>
                                <RadioButton Click="SortUsersByRankAscending" Content="{x:Bind Localizer.SortBy_RankAscending}"/>
                                <RadioButton Click="SortUsersByRankDescending" Content="{x:Bind Localizer.SortBy_RankDescending}"/>
                                <TextBlock Margin="10,0,0,0" Text="Name: " VerticalAlignment="Center"></TextBlock>
                                <TextBox Margin="10,0,0,0" Width="200" VerticalAlignment="Center" Text="{Binding UsernameFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </StackPanel>
                            <CheckBox IsChecked="{Binding OnlyShowLfgUsers, Mode=TwoWay}" Content="{x:Bind Localizer.Igs_OnlyShowLfgers}"/>
                        </StackPanel>
                        <ListBox Grid.Row="1" ItemsSource="{Binding ChallengeableUsers, Mode=OneWay}"  SelectedItem="{Binding SelectedChallengeableUser, Mode=TwoWay}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="10, 1, 0, 1"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <Button Grid.Row="2" 
                                Content="{x:Bind Localizer.Igs_ChallengeSelectedPlayer}"
                                Command="{Binding ChallengeSelectedPlayer}"/>
                    </Grid>
                </PivotItem>
                <PivotItem Header="Console" Visibility="{x:Bind VM.ConsoleVisible}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                            <Button Click="RefreshConsole">Refresh</Button>
                            <Button Click="RefreshConsoleTail">Refresh tail</Button>
                            <TextBlock Margin="10,0,0,0" FontStyle="Italic" VerticalAlignment="Center">Refreshing might block the UI for a while.</TextBlock>
                        </StackPanel>

                        <TextBox Grid.Row="1"
                                 Padding="10"
                                 Name="IgsConsole" 
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 FontFamily="Consolas"
                                 FontSize="14">
                        </TextBox>
                    </Grid>
                </PivotItem>
            </Pivot>
            <CommandBar HorizontalContentAlignment="Stretch" IsDynamicOverflowEnabled="False" OverflowButtonVisibility="Visible" Grid.Row="3" VerticalContentAlignment="Top">
                <CommandBar.Content>
                    <Grid HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" Margin="12,0,0,0" VerticalAlignment="Top" Height="48">
                            <FontIcon VerticalAlignment="Center" Glyph="&#xE2AF;" FontFamily="Segoe MDL2 Assets" />
                            <TextBlock VerticalAlignment="Center" Margin="8,0,0,0" Text="{Binding LoggedInUser, Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Height="48" HorizontalAlignment="Right" Visibility="{Binding ProgressPanelVisible, Converter={StaticResource VisibilityConverter}, Mode=TwoWay}">
                            <ProgressRing IsActive="True" Height="20" Width="20" Margin="0,0,8,0" VerticalAlignment="Center" />
                            <TextBlock VerticalAlignment="Center" Margin="0,0,8,0" Text="{Binding ProgressPanelText, Mode=OneWay}" />
                        </StackPanel>
                    </Grid>
                </CommandBar.Content>
                <CommandBar.PrimaryCommands>
                    <AppBarButton Label="{x:Bind Localizer.Settings}">
                        <AppBarButton.Icon>
                            <BitmapIcon UriSource="/Assets/Icons/Commands/MultiplayerOptions.png" />
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem Style="{StaticResource ToggleMenuItemStyle}"  IsChecked="{Binding HumanLookingForGame, Mode=TwoWay}" Text="{x:Bind Localizer.Igs_LFG}" />
                                <ToggleMenuFlyoutItem Style="{StaticResource ToggleMenuItemStyle}"  IsChecked="{Binding HumanRefusingAllGames, Mode=TwoWay}" Text="{x:Bind Localizer.Igs_RefuseAll}" />
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                    <AppBarButton Command="{x:Bind VM.LogoutCommand}" Label="{x:Bind Localizer.Logout}">
                        <AppBarButton.Icon>
                            <PathIcon Style="{StaticResource LogoutIcon}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>

        <!-- Login form -->
        <userControls:LoginFormControl ViewModel="{x:Bind VM.LoginForm}" Visibility="{x:Bind VM.LoginForm.FormVisible, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
    </Grid>
</views:TransparencyViewBase>

